local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/AikaV3rm/UiLib/master/Lib.lua')))()
local w = library:CreateWindow("by dizy#5334")

local LP = game:GetService("Players").LocalPlayer;
local tab1 = w:CreateFolder("Farming");
local tab2 = w:CreateFolder("Buybot");

getgenv().AutoFarm = true;
getgenv().LaunchRocket = false;
getgenv().BuyBackpack = false;
getgenv().BuyFuelScoop = false;
getgenv().BuyRocket = false;
getgenv().CollectFestiveCandies = false;

tab1:Toggle("Auto Farm", function(bool)
    shared.toggle = bool
    getgenv().AutoFarm = bool;
end)

tab1:Toggle("Launch Rocket", function(bool)
    shared.toggle = bool
    getgenv().LaunchRocket = bool;
end)

tab1:Toggle("Collect Festive Candies", function(bool)
    shared.toggle = bool
    getgenv().CollectFestiveCandies = bool;
end)

tab2:Toggle("Buy Rocket", function(bool)
    shared.toggle = bool
    getgenv().BuyRocket = bool;
end)

tab2:Toggle("Buy Fuel Scoop", function(bool)
    shared.toggle = bool
    getgenv().BuyFuelScoop = bool;
end)

tab2:Toggle("Buy Backpack", function(bool)
    shared.toggle = bool
    getgenv().BuyBackpack = bool;
end)

pcall(function()
    if game:GetService("Workspace"):FindFirstChild("Launchpad") == nil then return; end
    for _,pad in pairs(game:GetService("Workspace"):GetChildren()) do
        if pad:IsA("Model") and pad.Name == "Launchpad" then
            if pad['Values']['Owner'].Value == nil then
                if LP['Values']['ClaimedPad'].Value == nil then
                    LP.Character.Humanoid:MoveTo(pad['ClaimBase'].Position, pad['ClaimBase']);
                    for _,v in pairs(game:GetService("Workspace")["MainIsland"]["Shops"]:GetChildren()) do if v["ShopDetector"]["OpenDetector"].CanTouch == true then v["ShopDetector"]["OpenDetector"].CanTouch = false; end end
                    repeat wait(1); LP.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping); wait(0.3); LP.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping); until LP.Character.Humanoid.MoveToFinished;
                    LP.Character.Humanoid.MoveToFinished:Wait(); 
                    local h = Instance.new("Message", game:GetService("Workspace")); h.Text = "Claimed Pad!"; wait(3); h:Destroy();
                    for _,v in pairs(game:GetService("Workspace")["MainIsland"]["Shops"]:GetChildren()) do if v["ShopDetector"]["OpenDetector"].CanTouch == false then v["ShopDetector"]["OpenDetector"].CanTouch = true; end end
                end
            end
        end
    end
end)

spawn(function()
    for _,c in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do
        c:Disable();
    end
end)

pcall(function()
    for i=1,math.huge do
        wait(0.01)
        for _,v in pairs(game:GetService("Workspace")["MainIsland"]["Shops"]:GetChildren()) do if v["ShopDetector"]["OpenDetector"].CanTouch == false then v["ShopDetector"]["OpenDetector"].CanTouch = true; end end
        if getgenv().CollectFestiveCandies then
            print("WORKING")
            wait(1);
            repeat wait(0.01); for _,x in pairs(game:GetService("Workspace")["PresentGivers"]:GetChildren()) do if x ~= nil and x:FindFirstChildOfClass("Model") ~= nil and x:FindFirstChildOfClass("Model"):FindFirstChildOfClass("MeshPart") ~= nil then LP.Character:FindFirstChild("HumanoidRootPart").CFrame = x:FindFirstChildOfClass("Model"):FindFirstChildOfClass("MeshPart").CFrame; end end until LP["Values"]["GiftsCarried"].Value == 25;
            LP.Character:FindFirstChild("HumanoidRootPart").CFrame = game:GetService("Workspace")["Machine"]["Belt1"]["Collector"].CFrame;
        end

        if getgenv().AutoFarm then
            local h = Instance.new("Message", game:GetService("Workspace")); h.Text = "Started Farming"; wait(1); h:Destroy();
            if LP.Character:FindFirstChildOfClass("Tool") == nil then LP.Backpack:FindFirstChildOfClass("Tool").Parent = LP.Character; end
            if LP["Values"]["FuelCarried"].Value ~= 0 then 
                game:GetService("ReplicatedStorage").Teleport:FireServer(); 
                wait(1); 
                for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then LP.Character.Humanoid:MoveTo(v["FuelCollector"]["CollectorPad"].Position, v["FuelCollector"]["CollectorPad"]); end end 
                LP.Character.Humanoid.MoveToFinished:Wait();
                local h = Instance.new("Message", game:GetService("Workspace")); h.Text = "Sold all Fuel from backpack."; wait(2); h:Destroy();
            end
            wait(1)
            repeat if LP.Character:FindFirstChildOfClass("Tool") == nil then LP.Backpack:FindFirstChildOfClass("Tool").Parent = LP.Character; end wait(0.01); for _,v in pairs(game:GetService("Workspace")["MainIsland"]["Shops"]:GetChildren()) do if v["ShopDetector"]["OpenDetector"].CanTouch == true then v["ShopDetector"]["OpenDetector"].CanTouch = false; end end for _,v in pairs(game:GetService("Workspace")["Fuel"]:GetChildren()) do v.CanCollide = false; end LP.Character.Humanoid:MoveTo(game:GetService("Workspace")["Fuel"]:FindFirstChild("Fuel").Position, game:GetService("Workspace")["Fuel"]:FindFirstChild("Fuel")); LP.Character.Humanoid.MoveToFinished:Wait(); LP.Character:FindFirstChildOfClass("Tool"):Activate(); wait(0.01); until LP["Values"]["FuelCarried"].Value >= LP["Values"]["FuelCapacity"].Value; 
            game:GetService("ReplicatedStorage").Teleport:FireServer()
            wait(1)
            for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then LP.Character.Humanoid:MoveTo(v["FuelCollector"]["CollectorPad"].Position, v["FuelCollector"]["CollectorPad"]); end end
            LP.Character.Humanoid.MoveToFinished:Wait();
            local h = Instance.new("Message", game:GetService("Workspace")); h.Text = "Sold all Fuel from backpack."; wait(1); h:Destroy();
            wait(1);
            if getgenv().LaunchRocket then
            for _,v in pairs(game:GetService("Workspace"):GetChildren()) do
                if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then
                    if v["Values"]["RocketLaunched"].Value == false then
                        for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then if v["FuelCollector"]["TransferToRocket"]["AddAll"]:FindFirstChildOfClass("ProximityPrompt") ~= nil then fireproximityprompt(v["FuelCollector"]["TransferToRocket"]["AddAll"]:FindFirstChildOfClass("ProximityPrompt"), math.huge); elseif v["FuelCollector"]["TransferToRocket"]["AddAll"]:FindFirstChildOfClass("ProximityPrompt") == nil and v["FuelCollector"]["TransferToRocket"]["AddAll"]:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ProximityPrompt") ~= nil then fireproximityprompt(v["FuelCollector"]["TransferToRocket"]["AddAll"]:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ProximityPrompt"), math.huge); end end end
                            for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then repeat wait() until v["Values"]["Fuel"].Value == 0; end end 
                            if LP.Character:FindFirstChildOfClass("Tool") ~= nil then LP.Character:FindFirstChildOfClass("Tool").Parent = LP.Backpack; end
                            for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then for _,x in pairs(v["LaunchStation"]["Parts"]:GetChildren()) do if x:IsA("Part") and x:FindFirstChild("Sign") ~= nil then LP.Character.Humanoid:MoveTo(Vector3.new(x.Position.X, x.Position.Y, x.Position.Z+3.5), x); end end end end 
                            --for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then LP.Character.Humanoid:MoveTo(v["LaunchStation"]["Parts"]["Part"]["Sign"].Position, v["LaunchStation"]["Parts"]["Part"]["Sign"]); end end 
                            LP.Character.Humanoid.MoveToFinished:Wait(); 
                            wait(2.5)
                            for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then if v["LaunchStation"]["LaunchButton"]["Mode"].Value == "Recall" then if v["LaunchStation"]["LaunchButton"]:FindFirstChildOfClass("ClickDetector") ~= nil then fireclickdetector(v["LaunchStation"]["LaunchButton"]:FindFirstChildOfClass("ClickDetector"), math.huge); fireproximityprompt(v["LaunchStation"]["LaunchButton"]:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ProximityPrompt"), math.huge); else fireproximityprompt(v["LaunchStation"]["LaunchButton"]:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ProximityPrompt"), math.huge); end local h = Instance.new("Message", game:GetService("Workspace")); h.Text = "Resetted Launch"; wait(2); h:Destroy(); else wait(0.1); end end end
                            wait(1)
                            for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then if v["LaunchStation"]["LaunchButton"]:FindFirstChildOfClass("ClickDetector") ~= nil then fireclickdetector(v["LaunchStation"]["LaunchButton"]:FindFirstChildOfClass("ClickDetector"), math.huge); fireproximityprompt(v["LaunchStation"]["LaunchButton"]:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ProximityPrompt"), math.huge); else fireproximityprompt(v["LaunchStation"]["LaunchButton"]:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ProximityPrompt"), math.huge); end local h = Instance.new("Message", game:GetService("Workspace")); h.Text = "Started Launch!"; wait(1); h:Destroy(); end end
                            --[[local h = Instance.new("Message", game:GetService("Workspace")); h.Text = "Started Launch"; wait(3); h:Destroy();
                            for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then repeat wait() until v["Values"]["RocketLaunched"].Value == true; end end
                            wait(1)
                            for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then repeat wait() until v["Values"]["RocketLaunched"].Value == false; end end 
                            for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then for _,x in pairs(v["LaunchStation"]["Parts"]:GetChildren()) do if x:IsA("Part") and x:FindFirstChild("Sign") ~= nil then if (LP.Character:FindFirstChild("HumanoidRootPart").Position-x.Position).Magnitude > 4.5 then LP.Character.Humanoid:MoveTo(Vector3.new(x.Position.X, x.Position.Y, x.Position.Z+3.5), x); end end end end end 
                            --LP.Character.Humanoid.MoveToFinished:Wait(); 
                            wait(3)
                            for _,v in pairs(game:GetService("Workspace"):GetChildren()) do if v.Name == "Launchpad" and v["Values"]["Owner"].Value == LP then fireclickdetector(v["LaunchStation"]["LaunchButton"]:FindFirstChildOfClass("ClickDetector"), math.huge); fireproximityprompt(v["LaunchStation"]["LaunchButton"]:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ProximityPrompt"), math.huge); end end
                            local h = Instance.new("Message", game:GetService("Workspace")); h.Text = "Resetted Launch"; wait(1); h:Destroy();
                            wait(1.5);]]
                        end
                    end
                end
            end
            wait(1.5);
            spawn(function()
                if getgenv().BuyRocket then
                    if LP["leaderstats"]["Cash"].Value > 0 then
                        if LP["leaderstats"]["Cash"].Value >= 100 and ((LP["leaderstats"]["Cash"].Value-100) / (100*5)) < 5 and LP["Rockets"]["HasRocket1"].Value == false then
                            game:GetService("ReplicatedStorage").BuyRocket:InvokeServer("Rocket", 1);
                        elseif LP["leaderstats"]["Cash"].Value >= 1000 and ((LP["leaderstats"]["Cash"].Value-1000) / (1000*5)) < 5 and LP["Rockets"]["HasRocket2"].Value == false then
                            game:GetService("ReplicatedStorage").BuyRocket:InvokeServer("Rocket", 2);
                        elseif LP["leaderstats"]["Cash"].Value >= 4000 and ((LP["leaderstats"]["Cash"].Value-4000) / (4000*5)) < 5 and LP["Rockets"]["HasRocket3"].Value == false then
                            game:GetService("ReplicatedStorage").BuyRocket:InvokeServer("Rocket", 3);
                        elseif LP["leaderstats"]["Cash"].Value >= 10000 and ((LP["leaderstats"]["Cash"].Value-10000) / (10000*5)) < 5 and LP["Rockets"]["HasRocket4"].Value == false then
                            game:GetService("ReplicatedStorage").BuyRocket:InvokeServer("Rocket", 4);
                        elseif LP["leaderstats"]["Cash"].Value >= 20000 and ((LP["leaderstats"]["Cash"].Value-20000) / (20000*5)) < 5 and LP["Rockets"]["HasRocket5"].Value == false then
                            game:GetService("ReplicatedStorage").BuyRocket:InvokeServer("Rocket", 5);
                        elseif LP["leaderstats"]["Cash"].Value >= 50000 and ((LP["leaderstats"]["Cash"].Value-50000) / (50000*5)) < 5 and LP["Rockets"]["HasRocket6"].Value == false then
                            game:GetService("ReplicatedStorage").BuyRocket:InvokeServer("Rocket", 6);
                        elseif LP["leaderstats"]["Cash"].Value >= 100000 and ((LP["leaderstats"]["Cash"].Value-100000) / (100000*5)) < 5 and LP["Rockets"]["HasRocket7"].Value == false then
                            game:GetService("ReplicatedStorage").BuyRocket:InvokeServer("Rocket", 7);
                        elseif LP["leaderstats"]["Cash"].Value >= 500000 and ((LP["leaderstats"]["Cash"].Value-500000) / (500000*5)) < 5 and LP["Rockets"]["HasRocket8"].Value == false then
                            game:GetService("ReplicatedStorage").BuyRocket:InvokeServer("Rocket", 8);
                        elseif LP["leaderstats"]["Cash"].Value >= 1500000 and ((LP["leaderstats"]["Cash"].Value-1500000) / (1500000*5)) < 5 and LP["Rockets"]["HasRocket9"].Value == false then
                            game:GetService("ReplicatedStorage").BuyRocket:InvokeServer("Rocket", 9);
                        elseif LP["leaderstats"]["Cash"].Value >= 5000000 and ((LP["leaderstats"]["Cash"].Value-5000000) / (5000000*5)) < 5 and LP["Rockets"]["HasRocket10"].Value == false then
                            game:GetService("ReplicatedStorage").BuyRocket:InvokeServer("Rocket", 10);
                        end
                    end
                end
            end)
            wait(0.25);
            spawn(function()
                if getgenv().BuyFuelScoop then
                    if LP["leaderstats"]["Cash"].Value > 0 then
                        if LP["leaderstats"]["Cash"].Value >= 10 and ((LP["leaderstats"]["Cash"].Value-10) / (10*5)) < 5 and LP["FuelScoops"]["HasFuelScoop1"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 1);
                        elseif LP["leaderstats"]["Cash"].Value >= 100 and ((LP["leaderstats"]["Cash"].Value-100) / (100*5)) < 5 and LP["FuelScoops"]["HasFuelScoop2"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 2);
                        elseif LP["leaderstats"]["Cash"].Value >= 500 and ((LP["leaderstats"]["Cash"].Value-500) / (500*5)) < 5 and LP["FuelScoops"]["HasFuelScoop3"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 3);
                        elseif LP["leaderstats"]["Cash"].Value >= 1000 and ((LP["leaderstats"]["Cash"].Value-1000) / (1000*5)) < 5 and LP["FuelScoops"]["HasFuelScoop4"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 4);
                        elseif LP["leaderstats"]["Cash"].Value >= 2000 and ((LP["leaderstats"]["Cash"].Value-2000) / (2000*5)) < 5 and LP["FuelScoops"]["HasFuelScoop5"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 5);
                        elseif LP["leaderstats"]["Cash"].Value >= 5000 and ((LP["leaderstats"]["Cash"].Value-5000) / (500*5)) < 5 and LP["FuelScoops"]["HasFuelScoop6"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 6);
                        elseif LP["leaderstats"]["Cash"].Value >= 10000 and ((LP["leaderstats"]["Cash"].Value-10000) / (10000*5)) < 5 and LP["FuelScoops"]["HasFuelScoop7"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 7);
                        elseif LP["leaderstats"]["Cash"].Value >= 20000 and ((LP["leaderstats"]["Cash"].Value-20000) / (20000*5)) < 5 and LP["FuelScoops"]["HasFuelScoop8"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 8);
                        elseif LP["leaderstats"]["Cash"].Value >= 50000 and ((LP["leaderstats"]["Cash"].Value-50000) / (50000*5)) < 5 and LP["FuelScoops"]["HasFuelScoop9"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 9);
                        elseif LP["leaderstats"]["Cash"].Value >= 100000 and ((LP["leaderstats"]["Cash"].Value-100000) / (100000*5)) < 5 and LP["FuelScoops"]["HasFuelScoop10"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 10);
                        elseif LP["leaderstats"]["Cash"].Value >= 500000 and ((LP["leaderstats"]["Cash"].Value-500000) / (500000*5)) < 5 and LP["FuelScoops"]["HasFuelScoop11"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 11);
                        elseif LP["leaderstats"]["Cash"].Value >= 1000000 and ((LP["leaderstats"]["Cash"].Value-1000000) / (1000000*5)) < 5 and LP["FuelScoops"]["HasFuelScoop12"].Value == false then
                            game:GetService("ReplicatedStorage").BuyFuelScoop:InvokeServer("FuelScoop", 12);
                        end
                    end
                end
            end)
            wait(0.25);
            spawn(function()
                if getgenv().BuyBackpack then
                    if LP["leaderstats"]["Cash"].Value > 1,000,000,000 then
                        if LP["leaderstats"]["Cash"].Value >= 10,000,000,000 and ((LP["leaderstats"]["Cash"].Value-10,000,000,000) / (10*5)) < 5 and LP["Backpacks"]["HasBackpack1"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 1);
                        elseif LP["leaderstats"]["Cash"].Value >= 100 and ((LP["leaderstats"]["Cash"].Value-100) / (100*5)) < 5 and LP["Backpacks"]["HasBackpack2"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 2);
                        elseif LP["leaderstats"]["Cash"].Value >= 500 and ((LP["leaderstats"]["Cash"].Value-500) / (500*5)) < 5 and LP["Backpacks"]["HasBackpack3"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 3);
                        elseif LP["leaderstats"]["Cash"].Value >= 1000 and ((LP["leaderstats"]["Cash"].Value-1000) / (1000*5)) < 5 and LP["Backpacks"]["HasBackpack4"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 4);
                        elseif LP["leaderstats"]["Cash"].Value >= 2500 and ((LP["leaderstats"]["Cash"].Value-2500) / (2500*5)) < 5 and LP["Backpacks"]["HasBackpack5"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 5);
                        elseif LP["leaderstats"]["Cash"].Value >= 5000 and ((LP["leaderstats"]["Cash"].Value-5000) / (5000*5)) < 5 and LP["Backpacks"]["HasBackpack6"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 6);
                        elseif LP["leaderstats"]["Cash"].Value >= 10000 and ((LP["leaderstats"]["Cash"].Value-10000) / (10000*5)) < 5 and LP["Backpacks"]["HasBackpack7"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 7);
                        elseif LP["leaderstats"]["Cash"].Value >= 20000 and ((LP["leaderstats"]["Cash"].Value-20000) / (20000*5)) < 5 and LP["Backpacks"]["HasBackpack8"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 8);
                        elseif LP["leaderstats"]["Cash"].Value >= 50000 and ((LP["leaderstats"]["Cash"].Value-50000) / (50000*5)) < 5 and LP["Backpacks"]["HasBackpack9"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 9);
                        elseif LP["leaderstats"]["Cash"].Value >= 100000 and ((LP["leaderstats"]["Cash"].Value-100000) / (100000*5)) < 5 and LP["Backpacks"]["HasBackpack10"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 10);
                        elseif LP["leaderstats"]["Cash"].Value >= 500000 and ((LP["leaderstats"]["Cash"].Value-500000) / (500000*5)) < 5 and LP["Backpacks"]["HasBackpack11"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 11);
                        elseif LP["leaderstats"]["Cash"].Value >= 1000000 and ((LP["leaderstats"]["Cash"].Value-1000000) / (1000000*5)) < 5 and LP["Backpacks"]["HasBackpack12"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 12);
                        elseif LP["leaderstats"]["Cash"].Value >= 2000000 and ((LP["leaderstats"]["Cash"].Value-2000000) / (2000000*5)) < 5 and LP["Backpacks"]["HasBackpack13"].Value == false then
                            game:GetService("ReplicatedStorage").BuyItem:InvokeServer("Backpack", 13);
                        end
                    end
                end
            end)
            wait(1);
        end
    end
end)
